unit uMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls, uDB, uEditarEstud;

type
  TForm2 = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    TabSheet5: TTabSheet;
    Label1: TLabel;
    Adicionar: TButton;
    Deletar: TButton;
    Listar: TButton;
    Atualizar: TButton;
    ListBoxEstudantes: TListBox;
    procedure AdicionarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ListarClick(Sender: TObject);
    procedure DeletarClick(Sender: TObject);
    procedure AtualizarClick(Sender: TObject);
  private
    { Private declarations }
  public
     ListaEstudantes: TStringList;
  end;

var
  Form2: TForm2;


implementation
  uses
  uMenuEstudantes, uDeletarEstud;


{$R *.dfm}

procedure TForm2.AdicionarClick(Sender: TObject);
begin
    FormEstudantes.ShowModal;
end;

procedure TForm2.AtualizarClick(Sender: TObject);
begin
  var
  Nome: string;
  Codigo: Integer;
begin
  if ListBoxEstudantes.ItemIndex = -1 then
  begin
    ShowMessage('Selecione um estudante para editar.');
    Exit;
  end;

  // Extrai o ID do item selecionado (ex: "3 - Luis")
  Nome := ListBoxEstudantes.Items[ListBoxEstudantes.ItemIndex];
 Codigo := StrToInt(Copy(nome, 1, Pos(' -', nome) - 1));

  // Cria e abre o formulário de edição
  FormEditarEstudantes := TFormEditarEstudantes.Create(Self);
  FormEditarEstudantes.CarregarEstudante(idEstudante); // Método que carrega os dados
  FormEditarEstudantes.ShowModal;
  FormEditarEstudantes.Free;

  // Atualiza a listagem após edição
  Listar(nil);
end;
end;

procedure TForm2.DeletarClick(Sender: TObject);
begin
     FormDeletar.ShowModal;
end;

procedure TForm2.ListarClick(Sender: TObject);
begin
  ListBoxEstudantes.Items.Clear;

  try
    DataModule1.FDQueryEstudante.Close;
    DataModule1.FDQueryEstudante.SQL.Text := 'SELECT id, nome FROM estudantes ORDER BY id';
    DataModule1.FDQueryEstudante.Open;

    while not DataModule1.FDQueryEstudante.Eof do
    begin

    ListBoxEstudantes.Items.Add(Format('%d - %s', [DataModule1.FDQueryEstudante.FieldByName('id').AsInteger, DataModule1.FDQueryEstudante.FieldByName('nome').AsString]));

      DataModule1.FDQueryEstudante.Next;
    end;
  except
    on E: Exception do
      ShowMessage('Erro ao listar estudantes: ' + E.Message);
  end;

end;

procedure TForm2.FormCreate(Sender: TObject);
begin
   ListaEstudantes := TStringList.Create;
end;

end.

