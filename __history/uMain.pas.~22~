unit uMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls, uDB, uEstudante, uEditarEstud, System.Generics.Collections, uMenuEstudantes;

type
  TForm2 = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    TabSheet5: TTabSheet;
    Label1: TLabel;
    Adicionar: TButton;
    Deletar: TButton;
    Listar: TButton;
    Atualizar: TButton;
    ListBoxEstudantes: TListBox;
    procedure AdicionarClick(Sender: TObject);
    procedure ListarClick(Sender: TObject);
    procedure DeletarClick(Sender: TObject);
    procedure AtualizarClick(Sender: TObject);
  private
    { Private declarations }
  public
     procedure DeletarEstudante(Estudante: TEstudante);
     procedure ListarEstudante(Estudante: TEstudante);
     procedure AdicionarEstudante(Estudante: TEstudante);
  end;

var
  FormEstudantes: TFormEstudantes;
  Form2: TForm2;



implementation
  uses
  uDeletarEstud;


{$R *.dfm}

procedure TForm2.AdicionarClick(Sender: TObject);
begin
    FormEstudantes.ShowModal;

end;

procedure TForm2.AdicionarEstudante(Estudante: TEstudante);

begin

end;


procedure TForm2.AtualizarClick(Sender: TObject);

  VAR
  Nome: string;
  id: Integer;

begin
  if ListBoxEstudantes.ItemIndex = -1 then
  begin
    ShowMessage('Selecione um estudante para editar.');
    Exit;
  end;

  // Extrai o ID do item selecionado (ex: "3 - Luis")
 Nome := ListBoxEstudantes.Items[ListBoxEstudantes.ItemIndex];
 id := StrToInt(Copy(nome, 1, Pos(' -', nome) - 1));

  // Cria e abre o formulário de edição
  FormEditarEstudantes := TFormEditarEstudantes.Create(Self);
  FormEditarEstudantes.CarregarEstudante(id); // Método que carrega os dados
  FormEditarEstudantes.ShowModal;
  FormEditarEstudantes.Free;

  ListarClick(nil)
end;


procedure TForm2.DeletarClick(Sender: TObject);

var Estudante : TEstudante;
begin
     DeletarEstudante(Estudante);
end;



procedure TForm2.DeletarEstudante(Estudante: TEstudante);
    var
  nome: string;
  id: Integer;
  confirmacao: Integer;
begin
  if ListBoxEstudantes.ItemIndex = -1 then
  begin
    ShowMessage('Selecione um estudante para deletar.');
    Exit;
  end;


  nome := ListBoxEstudantes.Items[ListBoxEstudantes.ItemIndex];
  id := StrToInt(Copy(nome, 1, Pos(' -', nome) - 1));

  confirmacao := MessageDlg('Deseja realmente excluir este estudante?', mtConfirmation, [mbYes, mbNo], 0);
  if confirmacao = mrYes then
  begin
  uEstudante.TEstudante.DeletarEstudante(id, nome);
   ShowMessage('Estudante deletado com sucesso!');

    ListarClick(nil); // Recarrega a listagem
  end;
end;

procedure TForm2.ListarClick(Sender: TObject);
var
estudante: TEstudante;
begin
   ListarEstudante(Estudante);
  end;



procedure TForm2.ListarEstudante(Estudante: TEstudante);

begin
  ListBoxEstudantes.Items.Clear;
  FormEstudantes.ListaEstudantes.Clear;


  try
    DataModule1.FDQueryEstudante.Close;
    DataModule1.FDQueryEstudante.SQL.Text := 'SELECT * FROM estudantes WHERE ativo = true';
    DataModule1.FDQueryEstudante.Open;

    while not DataModule1.FDQueryEstudante.Eof do
    begin



     Estudante := TEstudante.Create(DataModule1.FDQueryEstudante.FieldByName('nome').AsString,DataModule1.FDQueryEstudante.FieldByName('id').AsInteger);
      FormEstudantes.ListaEstudantes.add(Estudante);
      DataModule1.FDQueryEstudante.Next;



    end;
     for var estud in FormEstudantes.listaestudantes do begin
      ListBoxEstudantes.AddItem(estud.GetCodigo.ToString + ' - ' + estud.GetNome, nil);

    end;
  except
    on E: Exception do
      ShowMessage('Erro ao listar estudantes: ' + E.Message);
  end;

end;
end.
